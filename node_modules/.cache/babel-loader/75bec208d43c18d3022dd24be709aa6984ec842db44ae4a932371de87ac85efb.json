{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dania\\\\Desktop\\\\React Projects\\\\book-store\\\\src\\\\pages\\\\book\\\\Book.jsx\",\n  _s = $RefreshSig$();\n/* To get parameter from URL */\nimport { useParams } from \"react-router-dom\";\n/* import books array */\nimport { books } from \"../../data/books\";\nimport Rating from \"../../Components/bookslider/Rating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Book = () => {\n  _s();\n  /*  const params=useParams();\r\n   console.log(params); to take sth from the URL */\n  const {\n    id\n  } = useParams();\n  /* array books that contains all books we make an import to it  */\n  /* If id equal to the id we take from the URL , it gives the book that equal in the id to the one on the URL*/\n  /*  const book=books.find(b=>b.id===id); */ // 1 === \"1\" this is not true the integer not equal to the string \n  // to solve the problem we use parseInt(id) to convert from string to integer\n  const book = books.find(b => b.id === parseInt(id)); // parseInt(id)=+id\n  /* an error will occuer because every thing we take from URL returns as string */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/books/${book.image}`,\n        alt: book.title,\n        className: \"book-content-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-content-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"book-title\",\n          children: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-author\",\n          children: [\"by\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: book.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 27\n          }, this), \"(Author)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Rating, {\n          rating: book.rating,\n          reviews: book.reviews\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-add-to-cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(Book, \"r5uZNI/QgQLJ6YUN+rmQ/OIgZ/k=\", false, function () {\n  return [useParams];\n});\n_c = Book;\nexport default Book;\nvar _c;\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"names":["useParams","books","Rating","jsxDEV","_jsxDEV","Book","_s","id","book","find","b","parseInt","className","children","src","image","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","author","rating","reviews","_c","$RefreshReg$"],"sources":["C:/Users/dania/Desktop/React Projects/book-store/src/pages/book/Book.jsx"],"sourcesContent":["/* To get parameter from URL */\r\nimport { useParams } from \"react-router-dom\";\r\n/* import books array */ \r\nimport {books} from \"../../data/books\";\r\nimport Rating from \"../../Components/bookslider/Rating\";\r\nconst Book =()=>{\r\n   /*  const params=useParams();\r\n    console.log(params); to take sth from the URL */\r\n    const {id}=useParams();\r\n    /* array books that contains all books we make an import to it  */\r\n    /* If id equal to the id we take from the URL , it gives the book that equal in the id to the one on the URL*/ \r\n   /*  const book=books.find(b=>b.id===id); */ // 1 === \"1\" this is not true the integer not equal to the string \r\n    // to solve the problem we use parseInt(id) to convert from string to integer\r\n    const book=books.find(b=>b.id===parseInt(id)); // parseInt(id)=+id\r\n    /* an error will occuer because every thing we take from URL returns as string */ \r\n    return(\r\n        <div className=\"book\">\r\n            <div className=\"book-content\">\r\n                <img src={`/books/${book.image}`} alt={book.title} className=\"book-content-image\"/>\r\n                <div className=\"book-content-info\">\r\n                    <h1 className=\"book-title\">{book.title}</h1>\r\n                    <div className=\"book-author\">\r\n                        by<span>{book.author}</span>(Author)\r\n                    </div>\r\n                    <Rating rating={book.rating} reviews={book.reviews}/>\r\n                    <div className=\"book-add-to-cart\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n    \r\n    export default Book;"],"mappings":";;AAAA;AACA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C;AACA,SAAQC,KAAK,QAAO,kBAAkB;AACtC,OAAOC,MAAM,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxD,MAAMC,IAAI,GAAEA,CAAA,KAAI;EAAAC,EAAA;EACb;AACH;EACI,MAAM;IAACC;EAAE,CAAC,GAACP,SAAS,CAAC,CAAC;EACtB;EACA;EACD,4CAA4C;EAC3C;EACA,MAAMQ,IAAI,GAACP,KAAK,CAACQ,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACH,EAAE,KAAGI,QAAQ,CAACJ,EAAE,CAAC,CAAC,CAAC,CAAC;EAC/C;EACA,oBACIH,OAAA;IAAKQ,SAAS,EAAC,MAAM;IAAAC,QAAA,eACjBT,OAAA;MAAKQ,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBT,OAAA;QAAKU,GAAG,EAAG,UAASN,IAAI,CAACO,KAAM,EAAE;QAACC,GAAG,EAAER,IAAI,CAACS,KAAM;QAACL,SAAS,EAAC;MAAoB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnFjB,OAAA;QAAKQ,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC9BT,OAAA;UAAIQ,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEL,IAAI,CAACS;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5CjB,OAAA;UAAKQ,SAAS,EAAC,aAAa;UAAAC,QAAA,GAAC,IACvB,eAAAT,OAAA;YAAAS,QAAA,EAAOL,IAAI,CAACc;UAAM;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,YAChC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNjB,OAAA,CAACF,MAAM;UAACqB,MAAM,EAAEf,IAAI,CAACe,MAAO;UAACC,OAAO,EAAEhB,IAAI,CAACgB;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACrDjB,OAAA;UAAKQ,SAAS,EAAC;QAAkB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAf,EAAA,CAzBCD,IAAI;EAAA,QAGKL,SAAS;AAAA;AAAAyB,EAAA,GAHlBpB,IAAI;AA2BN,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}