{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dania\\\\Desktop\\\\React Projects\\\\book-store\\\\src\\\\pages\\\\book\\\\Book.jsx\",\n  _s = $RefreshSig$();\n/* To get parameter from URL */\nimport { useParams } from \"react-router-dom\";\n/* import books array */\nimport { books } from \"../../data/books\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Book = () => {\n  _s();\n  /*  const params=useParams();\r\n   console.log(params); to take sth from the URL */\n  const {\n    id\n  } = useParams();\n  /* array books that contains all books we make an import to it  */\n  /* If id equal to the id we take from the URL , it gives the book that equal in the id */\n  books.find(b => b.id === id);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Book\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(Book, \"r5uZNI/QgQLJ6YUN+rmQ/OIgZ/k=\", false, function () {\n  return [useParams];\n});\n_c = Book;\nexport default Book;\nvar _c;\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"names":["useParams","books","jsxDEV","_jsxDEV","Book","_s","id","find","b","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dania/Desktop/React Projects/book-store/src/pages/book/Book.jsx"],"sourcesContent":["/* To get parameter from URL */\r\nimport { useParams } from \"react-router-dom\";\r\n/* import books array */ \r\nimport {books} from \"../../data/books\";\r\nconst Book =()=>{\r\n   /*  const params=useParams();\r\n    console.log(params); to take sth from the URL */\r\n    const {id}=useParams();\r\n    /* array books that contains all books we make an import to it  */\r\n    /* If id equal to the id we take from the URL , it gives the book that equal in the id */ \r\n    books.find(b=>b.id===id);\r\n    return(\r\n        <h1>Book</h1>\r\n    );\r\n    }\r\n    \r\n    export default Book;"],"mappings":";;AAAA;AACA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C;AACA,SAAQC,KAAK,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvC,MAAMC,IAAI,GAAEA,CAAA,KAAI;EAAAC,EAAA;EACb;AACH;EACI,MAAM;IAACC;EAAE,CAAC,GAACN,SAAS,CAAC,CAAC;EACtB;EACA;EACAC,KAAK,CAACM,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACF,EAAE,KAAGA,EAAE,CAAC;EACxB,oBACIH,OAAA;IAAAM,QAAA,EAAI;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAEjB,CAAC;AAAAR,EAAA,CAVCD,IAAI;EAAA,QAGKJ,SAAS;AAAA;AAAAc,EAAA,GAHlBV,IAAI;AAYN,eAAeA,IAAI;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}